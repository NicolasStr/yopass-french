name: Modification Controller

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  comment-base-image-update:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if FROM line changed
        id: check_diff
        run: |
          BASE_BRANCH=$(jq -r .pull_request.base.ref "$GITHUB_EVENT_PATH")
          git fetch origin "$BASE_BRANCH"
          FROM_DIFF=$(git diff origin/"$BASE_BRANCH"...HEAD -- Dockerfile | grep '^[-+]' | grep -i '^[-+]FROM' || true)

          if [ -n "$FROM_DIFF" ]; then
            echo "from_changed=true" >> $GITHUB_OUTPUT
          else
            echo "from_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Extract base image version from Dockerfile
        if: steps.check_diff.outputs.from_changed == 'true'
        id: extract
        run: |
          BASE_IMAGE_LINE=$(grep -i '^FROM' Dockerfile | head -n 1)
          BASE_IMAGE=$(echo "$BASE_IMAGE_LINE" | awk '{print $2}')
          IMAGE_NAME=$(echo "$BASE_IMAGE" | cut -d':' -f1)
          IMAGE_TAG=$(echo "$BASE_IMAGE" | cut -s -d':' -f2)
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "image_tag=${IMAGE_TAG:-latest}" >> $GITHUB_OUTPUT
      
      - name: Set default image outputs
        if: steps.check_diff.outputs.from_changed != 'true'
        id: extract
        run: |
          echo "image_name=unchanged" >> $GITHUB_OUTPUT
          echo "image_tag=unchanged" >> $GITHUB_OUTPUT

      - name: Build Docker image
        continue-on-error: true
        id: build
        run: |
          docker build -t yopass-french .

      - name: Set build status output
        id: build-status
        run: |
          if [ "${{ steps.build.outcome }}" = "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Copy en.json from Docker image
        if: steps.build-status.outputs.status == 'success'
        run: |
          container_id=$(docker create yopass-french)
          docker cp "$container_id":/app/locales/en.json ./en.json
          docker rm "$container_id"

      - name: Compare en.json with fr.json
        if: steps.build-status.outputs.status == 'success'
        id: compare-translations
        run: |
          missing_keys=$(jq -r 'keys[]' en.json | while read -r key; do
            jq -e --arg key "$key" 'has($key)' locales/fr.json > /dev/null || echo "$key"
          done)

          if [ -z "$missing_keys" ]; then
            echo "all_translated=true" >> $GITHUB_OUTPUT
          else
            echo "all_translated=false" >> $GITHUB_OUTPUT
            echo "missing_keys<<EOF" >> $GITHUB_OUTPUT
            echo "$missing_keys" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR with translation status
        uses: actions/github-script@v7
        with:
          script: |
            const imageName = "${{ steps.extract.outputs.image_name }}";
            const imageTag = "${{ steps.extract.outputs.image_tag }}";
            const buildStatus = "${{ steps.build-status.outputs.status }}";
            const allTranslated = "${{ steps.compare-translations.outputs.all_translated }}" === 'true';
            const missingKeys = `${{ steps.compare-translations.outputs.missing_keys }}`;

            let body = '';

            if (fromChanged) {
              body += `📦 **Base image update detected**\n\n`;
              body += `This PR updates the base Docker image to: \`${imageName}:${imageTag}\`.\n\n`;
              body += `✅ When this PR is merged, a new release will be created using this version.\n`;
            }
            if (!fromChanged && buildStatus === 'success') {
              body += `📦 **Base image version was not changed.**\n\n`;
              body += `✅ When this PR is merged, A new release will be created as: \`${imageTag}-X\`, where \`X\` is the next translation bump version.`;
            }

            body += `\n🛠️ **Build status:** ${buildStatus === 'success' ? '✅ Success' : '❌ Failed'}`;

            if (buildStatus === 'success') {
              if (allTranslated) {
                body += `\n🌍 All translation keys from \`en.json\` are present in \`fr.json\`.`;
              } else {
                body += `\n⚠️ Some translation keys are missing in \`fr.json\`:\n\`\`\`\n${missingKeys.trim()}\n\`\`\``;
              }
            } else {
              body += `\n⚠️ Skipped translation check because the Docker build failed.`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

      - name: Submit review requesting changes if translations are incomplete
        if: steps.build-status.outputs.status == 'success' && steps.compare-translations.outputs.all_translated == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const missingKeys = `${{ steps.compare-translations.outputs.missing_keys }}`;
            const imageName = "${{ steps.extract.outputs.image_name }}";
            const imageTag = "${{ steps.extract.outputs.image_tag }}";

            const body = `🚫 **Translation keys missing**`;
            body += `The following keys from \`en.json\` are not present in \`fr.json\` for image \`${imageName}:${imageTag}\`:\n`;
            body += \`\`\`;
            body += ${missingKeys.trim()};
            body += \`\`\`
            body += `\n\nPlease add the missing translations before merging.`;

            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: body,
              event: "REQUEST_CHANGES"
            });